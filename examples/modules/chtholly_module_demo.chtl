// 珂朵莉官方模块使用演示
// 展示官方模块的强大功能和角色化设计

[Import] @chtl::Chtholly as Chtholly

[Namespace] ChthollyDemo

html {
    head {
        title { "珂朵莉官方模块演示" }
        meta { charset="UTF-8" }
        
        // 引入珂朵莉主题样式
        style {
            :root {
                --chtholly-primary: #ff6b6b;
                --chtholly-secondary: #4ecdc4;
                --chtholly-accent: #ffd93d;
                --chtholly-text: #2c3e50;
                --chtholly-bg: #f8f9fa;
            }
        }
    }
    
    body {
        div {
            class = "chtholly-world";
            
            // 页面标题
            header {
                class = "chtholly-header";
                
                h1 { "🌸 珂朵莉·诺塔·塞尼欧里斯" }
                p { "世界上最幸福的女孩 - 官方模块演示" }
            }
            
            // 四叶相册组件（来自CMOD）
            div {
                use = "Chtholly::FourLeafAlbum";
                data-images = "chtholly1.jpg,chtholly2.jpg,chtholly3.jpg";
                
                h3 { "📸 四叶相册" }
                p { "珂朵莉的美好回忆，四叶草形状的相册展示" }
            }
            
            // 手风琴组件（来自CMOD）
            div {
                use = "Chtholly::Accordion";
                
                h3 { "🎵 手风琴组件" }
                
                div {
                    class = "accordion-item";
                    data-title = "珂朵莉的故事";
                    
                    p { "在浮游大陆群的天空中，生活着被称为'妖精'的少女们..." }
                }
                
                div {
                    class = "accordion-item";
                    data-title = "妖精兵器";
                    
                    p { "珂朵莉是最强的妖精兵器，拥有毁灭一切的力量..." }
                }
                
                div {
                    class = "accordion-item";
                    data-title = "最后的战斗";
                    
                    p { "为了保护重要的人，珂朵莉选择了牺牲..." }
                }
            }
            
            // 功能演示区域
            div {
                class = "demo-section";
                
                h3 { "💝 CJMOD功能演示" }
                
                div {
                    class = "demo-controls";
                    
                    button {
                        class = "chtholly-button";
                        data-action = "printMylove";
                        "表达爱意"
                    }
                    
                    button {
                        class = "chtholly-button";
                        data-action = "iNeverAway";
                        "永恒守护"
                    }
                    
                    button {
                        class = "chtholly-button";
                        data-action = "utilThen";
                        "异步链式"
                    }
                }
                
                div {
                    class = "demo-output";
                    id = "demo-output";
                    "点击按钮查看珂朵莉模块的强大功能..."
                }
            }
        }
        
        style {
            body {
                margin: 0;
                padding: 0;
                background: var(--chtholly-bg);
                color: var(--chtholly-text);
                font-family: 'Microsoft YaHei', sans-serif;
            }
            
            .chtholly-world {
                min-height: 100vh;
                background: linear-gradient(135deg, 
                    rgba(255, 107, 107, 0.1) 0%, 
                    rgba(78, 205, 196, 0.1) 50%, 
                    rgba(255, 217, 61, 0.1) 100%);
            }
            
            .chtholly-header {
                text-align: center;
                padding: 60px 20px;
                background: rgba(255, 255, 255, 0.9);
                backdrop-filter: blur(10px);
            }
            
            .chtholly-header h1 {
                font-size: 3em;
                margin: 0 0 20px 0;
                background: linear-gradient(45deg, var(--chtholly-primary), var(--chtholly-secondary));
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
            }
            
            .demo-section {
                max-width: 800px;
                margin: 40px auto;
                padding: 0 20px;
            }
            
            .demo-controls {
                display: flex;
                gap: 15px;
                justify-content: center;
                margin: 30px 0;
                flex-wrap: wrap;
            }
            
            .chtholly-button {
                background: linear-gradient(45deg, var(--chtholly-primary), var(--chtholly-secondary));
                color: white;
                border: none;
                padding: 15px 30px;
                border-radius: 25px;
                font-size: 16px;
                font-weight: bold;
                cursor: pointer;
                transition: all 0.3s ease;
                box-shadow: 0 4px 15px rgba(0,0,0,0.2);
            }
            
            .chtholly-button:hover {
                transform: translateY(-3px);
                box-shadow: 0 6px 20px rgba(0,0,0,0.3);
            }
            
            .demo-output {
                background: #2d3748;
                color: #e2e8f0;
                padding: 20px;
                border-radius: 8px;
                font-family: 'Consolas', monospace;
                white-space: pre-wrap;
                min-height: 200px;
                border: 2px solid var(--chtholly-primary);
            }
        }
        
        // 珂朵莉模块功能脚本
        script {
            console.log('🌸 珂朵莉官方模块演示初始化');
            
            // 模拟珂朵莉模块的强大功能
            const ChthollyModule = {
                printMylove: function(config) {
                    const target = config.target || '世界';
                    const message = config.message || '我永远爱你';
                    
                    console.log(`💝 printMylove: ${message} -> ${target}`);
                    
                    // 生成字符艺术
                    const art = `
        ♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥
        ♥                                   ♥
        ♥     ${message}           ♥
        ♥                                   ♥
        ♥           -> ${target}              ♥
        ♥                                   ♥
        ♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥♥
                    `;
                    
                    return {
                        message: message,
                        target: target,
                        art: art,
                        timestamp: new Date().toLocaleString(),
                        emotion: 'love'
                    };
                },
                
                iNeverAway: function(config) {
                    console.log('🌟 iNeverAway: 永恒守护系统激活');
                    
                    const guardian = {
                        name: '珂朵莉',
                        promise: config.promise || '我永远不会离开',
                        target: config.target || '重要的人',
                        duration: config.forever ? 'infinite' : '永恒',
                        status: 'active'
                    };
                    
                    return new Promise(resolve => {
                        setTimeout(() => {
                            console.log(`💫 守护承诺: ${guardian.promise}`);
                            resolve(guardian);
                        }, 1000);
                    });
                },
                
                utilThen: function() {
                    console.log('⚡ util...then: 异步链式操作');
                    
                    const chain = {
                        fadeIn: () => {
                            console.log('  🎭 fadeIn -> 淡入效果');
                            return chain;
                        },
                        slideDown: () => {
                            console.log('  📐 slideDown -> 滑动效果');
                            return chain;
                        },
                        sparkle: () => {
                            console.log('  ✨ sparkle -> 闪烁效果');
                            return chain;
                        },
                        then: (callback) => {
                            setTimeout(callback, 300);
                            return chain;
                        }
                    };
                    
                    return chain;
                }
            };
            
            // 绑定按钮事件
            document.addEventListener('DOMContentLoaded', function() {
                const outputElement = document.getElementById('demo-output');
                
                document.querySelectorAll('.chtholly-button').forEach(button => {
                    button.addEventListener('click', function() {
                        const action = this.dataset.action;
                        
                        switch(action) {
                            case 'printMylove':
                                const loveResult = ChthollyModule.printMylove({
                                    target: '你',
                                    message: '珂朵莉的爱意'
                                });
                                outputElement.textContent = `printMylove功能执行结果:\n\n${JSON.stringify(loveResult, null, 2)}\n\n字符艺术:${loveResult.art}`;
                                break;
                                
                            case 'iNeverAway':
                                outputElement.textContent = 'iNeverAway功能执行中...\n正在建立永恒守护连接...';
                                ChthollyModule.iNeverAway({
                                    promise: '我永远守护着你',
                                    target: '重要的人',
                                    forever: true
                                }).then(result => {
                                    outputElement.textContent = `iNeverAway功能执行结果:\n\n${JSON.stringify(result, null, 2)}\n\n💫 永恒守护已建立`;
                                });
                                break;
                                
                            case 'utilThen':
                                outputElement.textContent = 'util...then功能执行中...\n请查看控制台输出';
                                ChthollyModule.utilThen()
                                    .fadeIn()
                                    .then(() => ChthollyModule.utilThen().slideDown())
                                    .then(() => ChthollyModule.utilThen().sparkle())
                                    .then(() => {
                                        outputElement.textContent += '\n\n✅ util...then异步链式操作完成\n所有效果已应用';
                                    });
                                break;
                        }
                    });
                });
                
                console.log('🎊 珂朵莉模块演示准备完成');
            });
        }
    }
}