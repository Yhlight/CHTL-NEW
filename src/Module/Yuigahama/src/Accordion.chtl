;; 由比滨结衣手风琴模板
;; 基于由比滨结衣角色设计的可爱手风琴组件

[Template] @Accordion
{
    div
    {
        class: yuigahama-accordion;
        
        style
        {
            .yuigahama-accordion
            {
                border: 2px solid #FFB6C1;
                border-radius: 15px;
                overflow: hidden;
                box-shadow: 0 6px 20px rgba(255, 182, 193, 0.3);
                background: linear-gradient(135deg, #FFF0F5 0%, #FFE4E1 100%);
                margin: 10px 0;
            }
            
            .accordion-header
            {
                background: linear-gradient(45deg, #FFB6C1, #FFC0CB);
                color: #8B4B8B;
                padding: 18px 25px;
                cursor: pointer;
                transition: all 0.3s ease;
                font-weight: bold;
                position: relative;
                display: flex;
                align-items: center;
                justify-content: space-between;
            }
            
            .accordion-header:hover
            {
                background: linear-gradient(45deg, #FF91A4, #FFB6C1);
                transform: translateY(-1px);
                box-shadow: 0 4px 12px rgba(255, 182, 193, 0.4);
            }
            
            .accordion-icon
            {
                font-size: 16px;
                transition: transform 0.3s ease;
            }
            
            .accordion-header.active .accordion-icon
            {
                transform: rotate(180deg);
            }
            
            .accordion-content
            {
                padding: 0 25px;
                background: #FAFAFA;
                border-top: 1px solid #FFE4E1;
                max-height: 0;
                overflow: hidden;
                transition: all 0.4s ease;
            }
            
            .accordion-content.active
            {
                max-height: 600px;
                padding: 25px;
            }
            
            .yuigahama-greeting
            {
                background: linear-gradient(45deg, #FFE4E1, #FFF0F5);
                border-left: 4px solid #FFB6C1;
                padding: 10px 15px;
                margin-bottom: 15px;
                border-radius: 0 8px 8px 0;
                color: #8B4B8B;
                font-style: italic;
            }
        }
        
        script
        {
            // 由比滨结衣手风琴交互逻辑
            console.log('🌸 雅哈喽～由比滨结衣的手风琴准备就绪！');
            
            const accordion = {{.yuigahama-accordion}};
            const header = accordion.querySelector('.accordion-header');
            const content = accordion.querySelector('.accordion-content');
            const icon = accordion.querySelector('.accordion-icon');
            
            // 创建图标
            if (!icon) {
                const iconEl = document.createElement('span');
                iconEl.className = 'accordion-icon';
                iconEl.textContent = '🌸';
                header.appendChild(iconEl);
            }
            
            // 点击事件
            header &-> click {
                const isActive = header.classList.contains('active');
                
                // 播放由比滨结衣特色音效（模拟）
                if (!isActive) {
                    console.log('🎵 雅哈喽～展开内容！');
                } else {
                    console.log('👋 再见～收起内容！');
                }
                
                // 切换状态
                header.classList.toggle('active');
                content.classList.toggle('active');
                
                // 添加温馨提示
                if (!isActive && !accordion.querySelector('.yuigahama-greeting')) {
                    const greeting = document.createElement('div');
                    greeting.className = 'yuigahama-greeting';
                    greeting.innerHTML = '🌟 雅哈喽～这里是由比滨结衣为你准备的内容哦！';
                    content.insertBefore(greeting, content.firstChild);
                }
            };
            
            // 导出控制接口
            window.YuigahamaEffects = window.YuigahamaEffects || {};
            window.YuigahamaEffects.Accordion = {
                expand: () => {
                    header.classList.add('active');
                    content.classList.add('active');
                },
                collapse: () => {
                    header.classList.remove('active');
                    content.classList.remove('active');
                },
                toggle: () => {
                    header.click();
                }
            };
        }
        
        div
        {
            class: accordion-header;
            
            text
            {
                @Title
            }
        }
        
        div
        {
            class: accordion-content;
            
            @Content
        }
    }
}