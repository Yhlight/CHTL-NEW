// CJMODÂèåÊåáÈíàÊâ´ÊèèÊ≥ï‰∏ìÈó®ÊºîÁ§∫
// Â±ïÁ§∫ÂèåÊåáÈíàÊâ´ÊèèÊ≥ïÁöÑÂº∫Â§ßËÉΩÂäõ
// ‰∏•Ê†ºÊåâÁÖßÂÆåÂñÑÈÄâÊã©Âô®Ëá™Âä®Âåñ‰∏éÂºïÁî®ËßÑÂàô.iniÂÆûÁé∞

[Import] @CJmod from "double_pointer_scanner"

[Configuration]
{
    CJMOD_DOUBLE_POINTER_SCAN = true;
    CJMOD_PRESCAN_LENGTH = 50;
    ENABLE_CONTEXT_DEDUCTION = true;
}

html
{
    head
    {
        title
        {
            text
            {
                CJMODÂèåÊåáÈíàÊâ´ÊèèÊ≥ïÊºîÁ§∫
            }
        }
    }
    
    body
    {
        div
        {
            id: double-pointer-demo;
            class: scanner-demo;
            
            text
            {
                üîç ÂèåÊåáÈíàÊâ´ÊèèÊ≥ïÂº∫Â§ßÂäüËÉΩÂ±ïÁ§∫
            }
            
            script
            {
                // ÂèåÊåáÈíàÊâ´ÊèèÊ≥ïÂ∑•‰ΩúÂéüÁêÜÊºîÁ§∫Ôºö
                // 1. ‰∏ÄÂºÄÂßã‰Ωç‰∫é0ÁÇπÔºåÂÖàËøõË°å‰∏ÄÂÆöÈïøÂ∫¶ÁöÑÈ¢ÑÂÖàÊâ´Êèè
                // 2. Ëã•Ê≤°ÊúâCJMODËØ≠Ê≥ïÔºåÂàôÂ∞ÜÊåáÈíàAÁßªÂä®Âà∞ÂêàÈÄÇÁöÑ‰ΩçÁΩÆ
                // 3. ÊåáÈíàAÂíåÊåáÈíàBÂêåÊ≠•ÂêëÂâçÔºåÁ±ª‰ººÊªëÂä®Á™óÂè£
                // 4. ÂΩìÊåáÈíàAÈÅáÂà∞ÂÖ≥ÈîÆÂ≠óÊó∂Ôºå‰ºöÈÄöÁü•ÊåáÈíàBËøõÂÖ•Êî∂ÈõÜÁä∂ÊÄÅ
                // 5. Á°Æ‰øùËÉΩÂ§üÊî∂ÈõÜÂà∞ÂÆåÊï¥ÁâáÊÆµ
                
                // Á§∫‰æã1: Êï∞Â≠¶Êìç‰ΩúÁ¨¶Êâ´Êèè
                let calculation1 = 3 ** 4;  // ** Êìç‰ΩúÁ¨¶‰ºöË¢´ÂèåÊåáÈíàÊâ´ÊèèÊ≥ïÂ§ÑÁêÜ
                let calculation2 = 5 ** 2;  // Âè¶‰∏Ä‰∏™ ** Êìç‰ΩúÁ¨¶
                let calculation3 = base ** exponent;  // ÂèòÈáèÂΩ¢ÂºèÁöÑ ** Êìç‰ΩúÁ¨¶
                
                // Á§∫‰æã2: Â§çÊùÇË°®ËææÂºèÊâ´Êèè
                let complex1 = (a + b) ** (c - d);  // Â§çÊùÇÁöÑ ** Ë°®ËææÂºè
                let complex2 = Math.pow(x, y) ** Math.sqrt(z);  // ÂµåÂ•óÁöÑ ** Ë°®ËææÂºè
                
                // Á§∫‰æã3: CHTL JSÁâπÊúâËØ≠Ê≥ïÊâ´Êèè
                {{.scanner-demo}} -> click {
                    // -> Êìç‰ΩúÁ¨¶‰ºöË¢´ÂèåÊåáÈíàÊâ´ÊèèÊ≥ïÂ§ÑÁêÜ
                    console.log('üîç ÂèåÊåáÈíàÊâ´ÊèèÊ≥ïÂ§ÑÁêÜÁöÑÁÇπÂáª‰∫ã‰ª∂');
                    
                    // ÊºîÁ§∫Êâ´ÊèèËøáÁ®ã
                    console.log('ÊåáÈíàAÂºÄÂßãÊâ´Êèè...');
                    console.log('È¢ÑÊâ´Êèè50‰∏™Â≠óÁ¨¶...');
                    console.log('ÂèëÁé∞CJMODËØ≠Ê≥ïÁâπÂæÅ');
                    console.log('ÊåáÈíàAÂíåÊåáÈíàBÂêåÊ≠•ÁßªÂä®');
                    console.log('ÈÅáÂà∞ÂÖ≥ÈîÆÂ≠óÔºåËøõÂÖ•Êî∂ÈõÜÁä∂ÊÄÅ');
                    console.log('Êî∂ÈõÜÂÆåÊï¥ÁâáÊÆµÂÆåÊàê');
                }
                
                {{#double-pointer-demo}} -> mouseenter {
                    console.log('üéØ ÂèåÊåáÈíàÊâ´ÊèèÊ≥ïÔºöÈº†Ê†áËøõÂÖ•‰∫ã‰ª∂');
                    
                    // ‰ΩøÁî®virËôöÂØπË±°ÔºàCJMODËØ≠Ê≥ïÁâπÂæÅÔºâ
                    vir scannerResult = doublePointerScan('**');
                    vir collectedData = scannerResult.getFragments();
                    
                    console.log('Êî∂ÈõÜÁöÑÊï∞ÊçÆ:', collectedData);
                }
                
                // Á§∫‰æã4: Âç†‰ΩçÁ¨¶ËØ≠Ê≥ïÊâ´Êèè
                function demonstrateScanning() {
                    // Ëøô‰∫õÂç†‰ΩçÁ¨¶‰ºöË¢´ÂèåÊåáÈíàÊâ´ÊèèÊ≥ïËØÜÂà´ÂíåÂ§ÑÁêÜ
                    let pattern1 = $ ** $;          // Âü∫Êú¨Âç†‰ΩçÁ¨¶
                    let pattern2 = $! ** $?;        // ÂøÖÈ°ª + ÂèØÈÄâÂç†‰ΩçÁ¨¶
                    let pattern3 = $_ ** $!_;       // Êó†Â∫èÂç†‰ΩçÁ¨¶
                    let pattern4 = ... ** $;        // ‰∏çÂÆöÂèÇÊï∞Âç†‰ΩçÁ¨¶
                    
                    return {
                        pattern1: pattern1,
                        pattern2: pattern2,
                        pattern3: pattern3,
                        pattern4: pattern4
                    };
                }
                
                // Á§∫‰æã5: ÈìæÂºèÊìç‰ΩúÊâ´Êèè
                asyncOperation()
                    -> then(result1)
                    -> then(result2)
                    -> catch(error)
                    -> finally(cleanup);
                
                // ÊØè‰∏™ -> ÈÉΩ‰ºöË¢´ÂèåÊåáÈíàÊâ´ÊèèÊ≥ïÁ≤æÁ°ÆÂ§ÑÁêÜ
                
                // Á§∫‰æã6: ‰∫ã‰ª∂ÂßîÊâòÊâ´Êèè
                delegate({{.dynamic-elements}}, 'click', function(event) {
                    console.log('üéØ ‰∫ã‰ª∂ÂßîÊâòË¢´ÂèåÊåáÈíàÊâ´ÊèèÊ≥ïÂ§ÑÁêÜ');
                    
                    // ÂµåÂ•óÁöÑCJMODËØ≠Ê≥ï
                    vir targetData = extractData(event.target);
                    vir processedData = processData(targetData) -> validate() -> format();
                    
                    console.log('Â§ÑÁêÜÁªìÊûú:', processedData);
                });
            }
            
            style
            {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                padding: 40px;
                border-radius: 20px;
                box-shadow: 0 20px 60px rgba(102, 126, 234, 0.4);
                color: white;
                text-align: center;
                position: relative;
                overflow: hidden;
                
                .scanner-demo {
                    font-size: 24px;
                    font-weight: bold;
                    margin-bottom: 20px;
                    text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
                }
                
                &:before {
                    content: 'üîç';
                    position: absolute;
                    top: 20px;
                    right: 20px;
                    font-size: 40px;
                    opacity: 0.3;
                }
                
                & {
                    transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
                }
                
                &:hover {
                    transform: translateY(-15px) rotateX(5deg);
                    box-shadow: 0 30px 80px rgba(102, 126, 234, 0.6);
                }
            }
        }
        
        div
        {
            class: scanning-process;
            
            text
            {
                ÂèåÊåáÈíàÊâ´ÊèèËøáÁ®ãÂèØËßÜÂåñ
            }
            
            script
            {
                // ÂèØËßÜÂåñÂèåÊåáÈíàÊâ´ÊèèËøáÁ®ã
                function visualizeScanningProcess() {
                    // Ê®°ÊãüÂèåÊåáÈíàÊâ´ÊèèÊ≥ïÁöÑÂ∑•‰ΩúËøáÁ®ã
                    
                    console.log('üîÑ ÂèåÊåáÈíàÊâ´ÊèèÊ≥ïÂêØÂä®');
                    console.log('üìç ÊåáÈíàA‰ΩçÁΩÆ: 0');
                    console.log('üìç ÊåáÈíàB‰ΩçÁΩÆ: 0');
                    
                    // È¢ÑÊâ´ÊèèÈò∂ÊÆµ
                    console.log('üîç È¢ÑÊâ´Êèè50‰∏™Â≠óÁ¨¶...');
                    console.log('‚úÖ ÂèëÁé∞CJMODËØ≠Ê≥ïÁâπÂæÅ: **, $, {{}}');
                    
                    // ÂêåÊ≠•ÁßªÂä®Èò∂ÊÆµ
                    console.log('üîÑ ÊåáÈíàAÂíåÊåáÈíàBÂºÄÂßãÂêåÊ≠•ÁßªÂä®');
                    console.log('üìç ÊåáÈíàA: 0 ‚Üí 10 ‚Üí 20 ‚Üí 30...');
                    console.log('üìç ÊåáÈíàB: 0 ‚Üí 10 ‚Üí 20 ‚Üí 30...');
                    
                    // ÂÖ≥ÈîÆÂ≠óÊ£ÄÊµãÈò∂ÊÆµ
                    console.log('üéØ ÊåáÈíàAÈÅáÂà∞ÂÖ≥ÈîÆÂ≠ó "**" ‰ΩçÁΩÆ: 45');
                    console.log('üîî ÈÄöÁü•ÊåáÈíàBËøõÂÖ•Êî∂ÈõÜÁä∂ÊÄÅ');
                    
                    // Êî∂ÈõÜÈò∂ÊÆµ
                    console.log('üì¶ ÂºÄÂßãÊî∂ÈõÜÂÆåÊï¥ÁâáÊÆµ...');
                    console.log('‚úÖ Êî∂ÈõÜÂÆåÊàê: "3 ** 4"');
                    
                    // ÁªìÊûú
                    console.log('üìä Êâ´ÊèèÁªìÊûú: ["3", "**", "4"]');
                    console.log('üéâ ÂèåÊåáÈíàÊâ´ÊèèÊ≥ïÂÆåÊàêÔºÅ');
                }
                
                {{.scanning-process}} -> click {
                    visualizeScanningProcess();
                }
                
                // ‰ΩøÁî®CJMODÂàõÂª∫ÁöÑÂáΩÊï∞ÊºîÁ§∫Êâ´ÊèèËøáÁ®ã
                vir scannerDemo = createScanner({
                    method: 'double_pointer',
                    prescan_length: 50,
                    keywords: ['**', '->', 'vir', '{{}}']
                });
                
                vir scanResult = scannerDemo.scan('3 ** 4 -> result');
                console.log('Êâ´ÊèèÊºîÁ§∫ÁªìÊûú:', scanResult);
            }
            
            style
            {
                background: #f8f9fa;
                border: 2px solid #28a745;
                border-radius: 15px;
                padding: 30px;
                margin: 30px 0;
                cursor: pointer;
                
                .scanning-process {
                    color: #28a745;
                    font-size: 18px;
                    font-weight: bold;
                }
                
                &:hover {
                    border-color: #20c997;
                    background: #e8f5e8;
                    transform: scale(1.02);
                    box-shadow: 0 10px 30px rgba(40, 167, 69, 0.3);
                }
                
                &:active {
                    transform: scale(0.98);
                }
            }
        }
    }
}