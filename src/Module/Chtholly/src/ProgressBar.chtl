;; 珂朵莉进度条自定义组件
;; 基于珂朵莉角色设计的美丽进度条

[Custom] @ProgressBar
{
    div
    {
        class: chtholly-progress-container;
        
        style
        {
            .chtholly-progress-container
            {
                width: 100%;
                height: 24px;
                background: #F5F5F5;
                border-radius: 12px;
                overflow: hidden;
                position: relative;
                box-shadow: inset 0 2px 4px rgba(0,0,0,0.1);
                border: 2px solid #FFE4E1;
            }
            
            .progress-bar
            {
                height: 100%;
                background: linear-gradient(45deg, #FF6B6B 0%, #4ECDC4 50%, #FF6B6B 100%);
                background-size: 200% 100%;
                border-radius: 10px;
                transition: width 0.5s ease;
                position: relative;
                animation: chthollyProgress 2s linear infinite;
            }
            
            @keyframes chthollyProgress
            {
                0% { background-position: 200% 0; }
                100% { background-position: -200% 0; }
            }
            
            .progress-text
            {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                color: white;
                font-weight: bold;
                font-size: 12px;
                text-shadow: 0 1px 2px rgba(0,0,0,0.3);
                z-index: 2;
            }
            
            .progress-glow
            {
                position: absolute;
                top: -2px;
                left: -2px;
                right: -2px;
                bottom: -2px;
                background: linear-gradient(45deg, #FF6B6B, #4ECDC4);
                border-radius: 14px;
                opacity: 0;
                transition: opacity 0.3s ease;
                z-index: -1;
            }
            
            .chtholly-progress-container:hover .progress-glow
            {
                opacity: 0.3;
            }
        }
        
        script
        {
            // 珂朵莉进度条逻辑
            const container = {{.chtholly-progress-container}};
            const progressBar = container.querySelector('.progress-bar') || (() => {
                const bar = document.createElement('div');
                bar.className = 'progress-bar';
                container.appendChild(bar);
                return bar;
            })();
            
            const progressText = container.querySelector('.progress-text') || (() => {
                const text = document.createElement('div');
                text.className = 'progress-text';
                progressBar.appendChild(text);
                return text;
            })();
            
            const progressGlow = container.querySelector('.progress-glow') || (() => {
                const glow = document.createElement('div');
                glow.className = 'progress-glow';
                container.appendChild(glow);
                return glow;
            })();
            
            let currentProgress = @InitialProgress || 0;
            const maxProgress = @MaxProgress || 100;
            const showText = @ShowText !== false;
            
            function updateProgress(progress) {
                currentProgress = Math.max(0, Math.min(progress, maxProgress));
                const percentage = (currentProgress / maxProgress) * 100;
                
                progressBar.style.width = percentage + '%';
                
                if (showText) {
                    progressText.textContent = Math.round(percentage) + '%';
                }
                
                console.log('💖 珂朵莉进度条更新:', percentage + '%');
                
                // 完成时的特效
                if (percentage >= 100) {
                    setTimeout(() => {
                        progressBar.style.background = 'linear-gradient(45deg, #FFD700, #FFA500)';
                        console.log('🌟 珂朵莉进度条完成！');
                    }, 500);
                }
            }
            
            // 导出控制接口
            window.ChthollyEffects = window.ChthollyEffects || {};
            window.ChthollyEffects.ProgressBar = {
                update: updateProgress,
                getValue: () => currentProgress,
                getPercentage: () => (currentProgress / maxProgress) * 100,
                reset: () => updateProgress(0),
                complete: () => updateProgress(maxProgress)
            };
            
            // 初始化进度
            updateProgress(currentProgress);
        }
    }
}