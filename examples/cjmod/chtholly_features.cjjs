// CJMOD强大特征演示 - 珂朵莉功能
// 展示CJMOD极为强大的C++ API扩展能力

// printMylove - 爱的表达功能
printMylove {
    target: "世界",
    message: "我永远爱你，珂朵莉",
    style: "romantic",
    animation: "heartbeat"
}

// iNeverAway - 永恒守护功能
vir EternalGuardian = iNeverAway {
    Void<Promise>: function(target, duration) {
        console.log(`💝 永恒的承诺: 我将永远守护${target}`);
        return new Promise(resolve => {
            setTimeout(() => {
                console.log(`⭐ 守护时间: ${duration}ms 完成`);
                resolve(`守护${target}的承诺已实现`);
            }, duration);
        });
    },
    
    Void<Protect>: function(target, threat) {
        console.log(`🛡️ 保护${target}免受${threat}的伤害`);
        return {
            status: "protected",
            target: target,
            threat: threat,
            guardian: "珂朵莉"
        };
    },
    
    Void: {
        console.log("💫 永恒守护系统已激活");
    }
}

// util...then - 异步链式操作
util.fadeIn(document.querySelector('.chtholly-card'))
    .then(util.slideDown())
    .then(util.addSparkles())
    .then(() => {
        console.log('✨ 珂朵莉特效序列完成');
    });

// 增强选择器功能
listen {
    selector: {{.chtholly-button[data-action="love"]}},
    event: "click",
    callback: function(event) {
        // 调用printMylove功能
        const result = printMylove {
            target: event.target.dataset.target || "你",
            message: "珂朵莉的爱意传达给了你",
            animation: "sparkle"
        };
        
        console.log('💕 爱的表达结果:', result);
        
        // 触发永恒守护
        EternalGuardian.Promise(event.target.dataset.target, 2000)
            .then(result => {
                console.log('🌟 守护完成:', result);
                
                // 显示特效
                event.target.style.background = 'linear-gradient(45deg, #ff6b6b, #ffd93d)';
                event.target.textContent = '💝 爱已传达';
            });
    }
}

// 委托事件处理
delegate {
    parent: ".chtholly-container",
    target: ".dynamic-element",
    event: "mouseover",
    callback: function(event) {
        // 使用iNeverAway保护功能
        const protection = EternalGuardian.Protect(
            event.target.textContent, 
            "恶意操作"
        );
        
        console.log('🛡️ 保护状态:', protection);
        
        // 添加保护特效
        event.target.style.border = '2px solid #4ecdc4';
        event.target.style.boxShadow = '0 0 10px rgba(78, 205, 196, 0.5)';
    }
}

// 动画系统
animate {
    target: ".chtholly-title",
    keyframes: {
        "0%": { opacity: 0, transform: "translateY(-30px)" },
        "50%": { opacity: 0.7, transform: "translateY(-10px)" },
        "100%": { opacity: 1, transform: "translateY(0)" }
    },
    duration: 1500,
    easing: "cubic-bezier(0.25, 0.46, 0.45, 0.94)",
    callback: function() {
        console.log('🌸 珂朵莉标题动画完成');
        
        // 链式动画
        animate {
            target: ".chtholly-subtitle",
            keyframes: {
                "0%": { opacity: 0, transform: "scale(0.8)" },
                "100%": { opacity: 1, transform: "scale(1)" }
            },
            duration: 800,
            delay: 200
        }
    }
}

// &-> 事件绑定操作符演示
document.querySelector('.chtholly-special') &-> 'dblclick' &-> function(event) {
    console.log('💫 双击特殊事件触发');
    
    // 组合使用多个CJMOD功能
    const loveMessage = printMylove {
        target: "特别的人",
        message: "珂朵莉的特殊祝福",
        mode: "special"
    };
    
    const protection = EternalGuardian.Promise("特别的人", 5000);
    
    Promise.all([loveMessage, protection]).then(results => {
        console.log('🎊 组合功能执行完成:', results);
        
        // 显示完成效果
        event.target.innerHTML = '🌟 珂朵莉的祝福已完成';
        event.target.style.background = 'linear-gradient(45deg, #ff6b6b, #4ecdc4, #ffd93d)';
    });
}

// -> 操作符演示
{{.chtholly-info}} -> textContent -> "珂朵莉·诺塔·塞尼欧里斯 - 世界上最幸福的女孩"
{{.chtholly-quote}} -> innerHTML -> `
    <blockquote>
        <p>"我想要成为世界上最幸福的女孩。"</p>
        <footer>— 珂朵莉·诺塔·塞尼欧里斯</footer>
    </blockquote>
`

// 模块导入演示（AMD风格）
module {
    name: "ChthollyFeatures",
    exports: {
        printMylove: printMylove,
        EternalGuardian: EternalGuardian,
        showLove: function(target) {
            return printMylove {
                target: target,
                message: "来自珂朵莉的爱",
                animation: "gentle"
            };
        }
    },
    dependencies: ["chtl::Chtholly"]
}