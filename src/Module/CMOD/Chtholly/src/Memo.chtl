;; 珂朵莉备忘录
;; 严格按照CHTL语法文档要求实现

[Template] @Element ChthollyMemo
{
    div
    {
        class: chtholly-memo;
        
        style
        {
            .chtholly-memo
            {
                background: linear-gradient(135deg, @Var ChthollyColors.soft-white 0%, @Var ChthollyColors.warm-pink 100%);
                border: 2px solid @Var ChthollyColors.primary-red;
                border-radius: 12px;
                padding: @Var ChthollySpacing.large;
                box-shadow: 0 6px 20px rgba(255, 107, 107, 0.2);
                font-family: @Var ChthollyFonts.primary-font;
                position: relative;
                max-width: 350px;
            }
            
            .memo-header
            {
                color: @Var ChthollyColors.primary-red;
                font-weight: bold;
                font-size: 18px;
                margin-bottom: @Var ChthollySpacing.medium;
                text-align: center;
            }
            
            .memo-content
            {
                background: rgba(255, 255, 255, 0.8);
                border-radius: 8px;
                padding: @Var ChthollySpacing.medium;
                min-height: 150px;
                border: 1px solid @Var ChthollyColors.emerald-green;
                font-family: @Var ChthollyFonts.primary-font;
                resize: vertical;
                outline: none;
            }
            
            .memo-footer
            {
                margin-top: @Var ChthollySpacing.medium;
                text-align: right;
                font-size: 12px;
                color: @Var ChthollyColors.primary-red;
                opacity: 0.7;
            }
            
            .memo-save-btn
            {
                background: linear-gradient(45deg, @Var ChthollyColors.primary-red, @Var ChthollyColors.emerald-green);
                color: white;
                border: none;
                border-radius: 20px;
                padding: @Var ChthollySpacing.small @Var ChthollySpacing.medium;
                cursor: pointer;
                transition: all 0.3s ease;
                margin-top: @Var ChthollySpacing.small;
            }
            
            .memo-save-btn:hover
            {
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(255, 107, 107, 0.4);
            }
        }
        
        script
        {
            ;; 珂朵莉备忘录逻辑
            console.log('📝 珂朵莉的备忘录准备就绪');
            
            const memo = {{.chtholly-memo}};
            const memoKey = 'chtholly_memo_' + Date.now();
            
            ;; 创建备忘录界面
            memo.innerHTML = `
                <div class="memo-header">💖 珂朵莉的备忘录 💖</div>
                <textarea class="memo-content" placeholder="在这里写下珂朵莉的回忆..."></textarea>
                <div class="memo-footer">
                    <button class="memo-save-btn">💾 保存回忆</button>
                    <div>💫 珂朵莉永远在心中</div>
                </div>
            `;
            
            const textarea = memo.querySelector('.memo-content');
            const saveBtn = memo.querySelector('.memo-save-btn');
            
            ;; 自动保存功能
            let autoSaveTimer;
            textarea &-> input {
                clearTimeout(autoSaveTimer);
                autoSaveTimer = setTimeout(() => {
                    localStorage.setItem(memoKey, textarea.value);
                    console.log('💖 珂朵莉备忘录自动保存');
                }, 2000);
            };
            
            ;; 手动保存
            saveBtn &-> click {
                localStorage.setItem(memoKey, textarea.value);
                console.log('💾 珂朵莉备忘录已保存');
                
                ;; 保存动画
                saveBtn.textContent = '✅ 已保存';
                setTimeout(() => {
                    saveBtn.textContent = '💾 保存回忆';
                }, 1000);
            };
            
            ;; 加载已保存的内容
            const savedContent = localStorage.getItem(memoKey);
            if (savedContent) {
                textarea.value = savedContent;
                console.log('📖 加载珂朵莉的回忆');
            }
            
            ;; 导出控制接口
            window.ChthollyMemo = {
                save: () => {
                    localStorage.setItem(memoKey, textarea.value);
                    console.log('💖 珂朵莉备忘录已保存');
                },
                load: () => {
                    const content = localStorage.getItem(memoKey);
                    if (content) textarea.value = content;
                    return content;
                },
                clear: () => {
                    textarea.value = '';
                    localStorage.removeItem(memoKey);
                    console.log('🧹 珂朵莉备忘录已清空');
                }
            };
        }
    }
}